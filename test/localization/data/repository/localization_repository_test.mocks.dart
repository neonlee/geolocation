// Mocks generated by Mockito 5.2.0 from annotations
// in cloudwatch/test/localization/data/repository/localization_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:cloudwatch/infra/connection.dart' as _i7;
import 'package:cloudwatch/infra/network_info.dart' as _i5;
import 'package:cloudwatch/localization/data/datasource/localization_localdatasource.dart'
    as _i6;
import 'package:cloudwatch/localization/data/datasource/localization_remotedatasource.dart'
    as _i3;
import 'package:cloudwatch/localization/domain/entity/current_position_ip_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCurrentPositionByIPEntity_0 extends _i1.Fake
    implements _i2.CurrentPositionByIPEntity {}

/// A class which mocks [LocalizationRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalizationRemoteDatasource extends _i1.Mock
    implements _i3.LocalizationRemoteDatasource {
  MockLocalizationRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CurrentPositionByIPEntity> currentPositionByIP({String? ip}) =>
      (super.noSuchMethod(
              Invocation.method(#currentPositionByIP, [], {#ip: ip}),
              returnValue: Future<_i2.CurrentPositionByIPEntity>.value(
                  _FakeCurrentPositionByIPEntity_0()))
          as _i4.Future<_i2.CurrentPositionByIPEntity>);
}

/// A class which mocks [GetIP].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetIP extends _i1.Mock implements _i5.GetIP {
  MockGetIP() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> getIp() =>
      (super.noSuchMethod(Invocation.method(#getIp, []),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
}

/// A class which mocks [LocalizationLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalizationLocalDatasource extends _i1.Mock
    implements _i6.LocalizationLocalDatasource {
  MockLocalizationLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> saveLatlang(String? value) =>
      (super.noSuchMethod(Invocation.method(#saveLatlang, [value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [Connection].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnection extends _i1.Mock implements _i7.Connection {
  MockConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> hasConnection() =>
      (super.noSuchMethod(Invocation.method(#hasConnection, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
